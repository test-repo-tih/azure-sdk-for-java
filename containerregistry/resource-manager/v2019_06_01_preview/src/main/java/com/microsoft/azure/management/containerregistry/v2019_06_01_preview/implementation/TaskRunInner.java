/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.containerregistry.v2019_06_01_preview.implementation;

import com.microsoft.azure.management.containerregistry.v2019_06_01_preview.IdentityProperties;
import com.microsoft.azure.management.containerregistry.v2019_06_01_preview.ProvisioningState;
import com.microsoft.azure.management.containerregistry.v2019_06_01_preview.RunRequest;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.microsoft.rest.serializer.JsonFlatten;
import com.microsoft.azure.Resource;

/**
 * The TaskRunInner model.
 */
@JsonFlatten
public class TaskRunInner extends Resource {
    /**
     * Identity for the resource.
     */
    @JsonProperty(value = "identity")
    private IdentityProperties identity;

    /**
     * Possible values include: 'Creating', 'Updating', 'Deleting',
     * 'Succeeded', 'Failed', 'Canceled'.
     */
    @JsonProperty(value = "properties.provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private ProvisioningState provisioningState;

    /**
     * The runRequest property.
     */
    @JsonProperty(value = "runRequest")
    private RunRequest runRequest;

    /**
     * The runResult property.
     */
    @JsonProperty(value = "runResult")
    private RunInner runResult;

    /**
     * Get identity for the resource.
     *
     * @return the identity value
     */
    public IdentityProperties identity() {
        return this.identity;
    }

    /**
     * Set identity for the resource.
     *
     * @param identity the identity value to set
     * @return the TaskRunInner object itself.
     */
    public TaskRunInner withIdentity(IdentityProperties identity) {
        this.identity = identity;
        return this;
    }

    /**
     * Get possible values include: 'Creating', 'Updating', 'Deleting', 'Succeeded', 'Failed', 'Canceled'.
     *
     * @return the provisioningState value
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the runRequest value.
     *
     * @return the runRequest value
     */
    public RunRequest runRequest() {
        return this.runRequest;
    }

    /**
     * Set the runRequest value.
     *
     * @param runRequest the runRequest value to set
     * @return the TaskRunInner object itself.
     */
    public TaskRunInner withRunRequest(RunRequest runRequest) {
        this.runRequest = runRequest;
        return this;
    }

    /**
     * Get the runResult value.
     *
     * @return the runResult value
     */
    public RunInner runResult() {
        return this.runResult;
    }

    /**
     * Set the runResult value.
     *
     * @param runResult the runResult value to set
     * @return the TaskRunInner object itself.
     */
    public TaskRunInner withRunResult(RunInner runResult) {
        this.runResult = runResult;
        return this;
    }

}
